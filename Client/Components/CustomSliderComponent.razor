@inject HttpClient _http
@inject IJSRuntime JS

<style>

    .card {
        margin: 0 .5em;
        width: calc(100%/@(CardItemCount));
    }

    .images-wrapper img {
        max-height: 100%;
        width: 100%;
        object-fit: contain;
    }

    @@media (min-width: 868px) {
        .cards-wrapper {
            display: flex;
        }

        .card {
            margin: 0 .5em;
            width: calc(100%/@(CardItemCount));
        }
    }


    @@media (min-width: 568px) {
        .cards-wrapper {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .card {
            margin: 0 .5em;
            width: calc(100%/@(CardItemgenerate(CardItemCount)));
        }
    }

    @@media (max-width: 567px) {
        .card {
            margin: 0 .5em;
            width: calc(100%/1);
        }
    }
</style>


<div class="my-5">
    <!-- Slider - Web -->
    @if(Stoklar != null)
    {
        <div class="container">
            <div id="carouselExampleSlidesOnly" class="carousel carousel-dark slide d-lg-block d-none" data-bs-ride="carousel">
                @if(Stoklar == null)
                {
                    <strong>Stok Bulunamadı</strong>
                }
                else
                {
                    <div class="carousel-inner">
                        @for(int i = 0; i < Stoklar.Count; i += CardItemCount)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="cards-wrapper">
                                    @for(int j = i; j < Math.Min(i + CardItemCount, Stoklar.Count); j++)
                                    {
                                        <div class="card" style="height:@(CardHeight)px !important;">
                                            <div class="images-wrapper">
                                                <img src="https://dummyimage.com/500x500/ccc/ccc" class="card-img-top" alt="img">
                                            </div>
                                            <div class="card-body">
                                                <h5 class="card-title">@Stoklar[j].stokcinsi</h5>
                                                <p class="card-text">@Stoklar[j].aciklama1</p>
                                                <a href="#" class="btn btn-primary">Go somewhere</a>
                                            </div>
                                        </div>
                                    }
                                </div>

                            </div>
                        }
                    </div>
                }



                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleSlidesOnly" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleSlidesOnly" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>


        <!-- Slider - Tablet -->
        <div id="carouselExample" class="carousel carousel-dark slide d-sm-block d-md-block d-lg-none d-none">
            <div class="carousel-inner">
                @if(Stoklar == null)
                {
                    <spa>Stok Bulunmamaktadır.</spa>
                }
                else
                {
                    <div class="carousel-inner">
                        @for(int i = 0; i < Stoklar.Count; i += CardItemgenerate(CardItemCount))
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="cards-wrapper">
                                    @for(int j = i; j < Math.Min(i + CardItemgenerate(CardItemCount), Stoklar.Count); j++)
                                    {
                                        <div class="card">
                                            <div class="images-wrapper">
                                                <img src="https://dummyimage.com/500x500/ccc/ccc" class="card-img-top" alt="img">
                                            </div>
                                            <div class="card-body">
                                                <h5 class="card-title">@Stoklar[j].stokcinsi</h5>
                                                <p class="card-text">@Stoklar[j].aciklama1</p>
                                                <a href="#" class="btn btn-primary">Go somewhere</a>
                                            </div>
                                        </div>
                                    }
                                </div>

                            </div>
                        }
                    </div>
                }

            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>


        <!-- Slider Mobile -->
        <div id="carouselExampleMobile" class="carousel carousel-dark slide mt-5 d-sm-none">
            <div class="carousel-inner">
                @if(Stoklar == null)
                {
                    <spa>Stok Bulunmamaktadır.</spa>
                }
                else
                {
                    @foreach(var s in Stoklar)
                    {
                        <div class="carousel-item @(activeIndex == Stoklar.IndexOf(s) ? "active" : "")">
                            <div class="card">
                                <img src="https://dummyimage.com/200x200/ccc/ccc" class="card-img-top" alt="...">
                                <div class="card-body">
                                    <h5 class="card-title">@s.stokcinsi</h5>
                                    <p class="card-text">@s.aciklama1</p>
                                    <a href="#" class="btn btn-primary">Go somewhere</a>
                                </div>
                            </div>
                        </div>
                    }

                }

            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleMobile" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleMobile" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>

    }

</div>

@code {
    [Parameter]
    public int CardItemCount { get; set; } = 4;

    [Parameter]
    public int CardHeight { get; set; } = 430;

    [Parameter]
    public List<StokListesiBilgileri> Stoklar { get; set; }

    int activeIndex = 0; // Başlangıçta aktif olan index


    private int CardItemgenerate(int item)
    {
        if(item % 2 == 0)
            return CardItemCount - 2;
        else if(item % 2 == 1)
            return CardItemCount - 1;
        else
            return CardItemCount;
    }

    private int StokCard(int stokCount, int cartItemNumber)
    {
        return stokCount / cartItemNumber;
    }
}
